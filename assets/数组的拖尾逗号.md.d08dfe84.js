import{_ as s,o as a,c as n,O as o}from"./chunks/framework.56b4393c.js";const F=JSON.parse('{"title":"数组的拖尾逗号","description":"","frontmatter":{},"headers":[],"relativePath":"数组的拖尾逗号.md","filePath":"数组的拖尾逗号.md"}'),l={name:"数组的拖尾逗号.md"},p=o(`<h1 id="数组的拖尾逗号" tabindex="-1">数组的拖尾逗号 <a class="header-anchor" href="#数组的拖尾逗号" aria-label="Permalink to &quot;数组的拖尾逗号&quot;">​</a></h1><p>有些时候，我们会看到数组元素的结尾也存在一个逗号，这种逗号叫做拖尾逗号，通常是为了在频繁地增减数组元素的时候同时保证语法的正确，拖尾逗号不占用数组的长度，例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 下面两种写法的结果是一样的</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(arr1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arr2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)  </span><span style="color:#676E95;font-style:italic;">// 3  3</span></span></code></pre></div>`,3),e=[p];function t(c,r,C,y,D,_){return a(),n("div",null,e)}const A=s(l,[["render",t]]);export{F as __pageData,A as default};
