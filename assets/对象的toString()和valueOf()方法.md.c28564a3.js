import{_ as s,o as a,c as l,O as o}from"./chunks/framework.56b4393c.js";const C=JSON.parse('{"title":"对象的toString()和valueOf()方法","description":"","frontmatter":{},"headers":[],"relativePath":"对象的toString()和valueOf()方法.md","filePath":"对象的toString()和valueOf()方法.md"}'),n={name:"对象的toString()和valueOf()方法.md"},t=o(`<h1 id="对象的tostring-和valueof-方法" tabindex="-1">对象的toString()和valueOf()方法 <a class="header-anchor" href="#对象的tostring-和valueof-方法" aria-label="Permalink to &quot;对象的toString()和valueOf()方法&quot;">​</a></h1><h2 id="对象的tostring-方法" tabindex="-1">对象的toString()方法 <a class="header-anchor" href="#对象的tostring-方法" aria-label="Permalink to &quot;对象的toString()方法&quot;">​</a></h2><p>所有对象实例的toString()方法会返回一个固定的字符串<code>[object Object]</code>，例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())  </span><span style="color:#676E95;font-style:italic;">// [object Object]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())  </span><span style="color:#676E95;font-style:italic;">// [object Object]</span></span></code></pre></div><p>当对象与对象相加，对象与字符串相加时，会隐式调用toString()，如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}+{}</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">//   [object Object][object Object]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">((</span><span style="color:#89DDFF;">{}+{}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)  </span><span style="color:#676E95;font-style:italic;">// 30</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}+</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// [object Object]Hello</span></span></code></pre></div><h2 id="对象的valueof-方法" tabindex="-1">对象的valueOf()方法 <a class="header-anchor" href="#对象的valueof-方法" aria-label="Permalink to &quot;对象的valueOf()方法&quot;">​</a></h2><p>对象示例的valueOf()返回对象本身，例如：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}.</span><span style="color:#82AAFF;">valueOf</span><span style="color:#A6ACCD;">())  </span><span style="color:#676E95;font-style:italic;">//  {}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">}.</span><span style="color:#82AAFF;">valueOf</span><span style="color:#A6ACCD;">())  </span><span style="color:#676E95;font-style:italic;">//  { a: 1, b: 2 }</span></span></code></pre></div>`,9),e=[t];function p(c,r,y,i,F,D){return a(),l("div",null,e)}const d=s(n,[["render",p]]);export{C as __pageData,d as default};
