import{_ as s,o as a,c as l,O as n}from"./chunks/framework.4afe7240.js";const D=JSON.parse('{"title":"布尔类型","description":"","frontmatter":{},"headers":[],"relativePath":"布尔类型.md","filePath":"布尔类型.md"}'),o={name:"布尔类型.md"},p=n(`<h1 id="布尔类型" tabindex="-1">布尔类型 <a class="header-anchor" href="#布尔类型" aria-label="Permalink to &quot;布尔类型&quot;">​</a></h1><p>布尔（英语：Boolean）是计算机科学中的逻辑数据类型，以发明布尔代数的数学家乔治·布尔为名。它是只有两种值的原始类型 : true和false。</p><p>下面这些值可以被显示或隐式地转换为true：</p><ul><li>非空字符串，注意，<code>&quot; &quot;</code>中间有一个空格，也算非空。</li><li>任意对象，包括空对象</li><li>正负无穷大（ Infinity、- Infinity）</li><li>非零数值</li></ul><p>下面这些值可以被显示或隐式地转换为false：</p><ul><li>空字符串<code>&quot;&quot;</code></li><li>NaN</li><li>数字0</li><li>null</li><li>undefined</li></ul><p>可以使用<code>!!()</code>和<code>Boolean()</code>将其它形式的值显示地转换为布尔类型，以便于条件判断，前者是后者的简写形式。</p><p>来看下面的示例：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 下面这些值都视作true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)  // =&gt; true</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 非空字符串，空格也算非空</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// 正负无穷大</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">// 任意对象，包括空对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 下面这些值都视作false</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)   </span><span style="color:#676E95;font-style:italic;">// =&gt;false 空字符串</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)   </span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">Boolean</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>在<code>if</code>语句中，不必显式地使用<code>!!()</code>，会自动隐式调用:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (a)</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//=&gt; true</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (b)</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//=&gt; false</span></span></code></pre></div>`,11),e=[p];function t(c,r,y,i,A,F){return a(),l("div",null,e)}const d=s(o,[["render",t]]);export{D as __pageData,d as default};
