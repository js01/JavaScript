import{_ as s,o as a,c as n,O as l}from"./chunks/framework.4afe7240.js";const i=JSON.parse('{"title":"字符串模板字面量","description":"","frontmatter":{},"headers":[],"relativePath":"字符串模板字面量.md","filePath":"字符串模板字面量.md"}'),o={name:"字符串模板字面量.md"},p=l(`<h1 id="字符串模板字面量" tabindex="-1">字符串模板字面量 <a class="header-anchor" href="#字符串模板字面量" aria-label="Permalink to &quot;字符串模板字面量&quot;">​</a></h1><p>模板字面量取代了早期和其它语言的<code>%d</code>、<code>%f</code>等写法，使得变量化的字符串更容易书写，也更易阅读。模板字符串使用反单引号包容，它有最主要的两个特点：保留了换行符等不可见字符（以往只能用<code>\\n</code>）；提供了变量解析和运算。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">第一行 (这里按回车) </span></span>
<span class="line"><span style="color:#C3E88D;">第二行</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str)   </span><span style="color:#676E95;font-style:italic;">// =&gt;&#39;第一行\\n第二行&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">a的值是</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// =&gt;&#39;a的值是1&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">a+b的结果是</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)    </span><span style="color:#676E95;font-style:italic;">// =&gt; &#39;a+b的结果是3&#39;</span></span></code></pre></div><p>虽然string类型是原始值，但是表现出像对象一样使用属性和方法。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)  </span><span style="color:#676E95;font-style:italic;">// =&gt;5， 字符串的长度</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">str])  </span><span style="color:#676E95;font-style:italic;">//=&gt;[ &#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39; ] ，将字符串快速打平为数组</span></span></code></pre></div>`,5),e=[p];function t(c,r,y,D,C,A){return a(),n("div",null,e)}const _=s(o,[["render",t]]);export{i as __pageData,_ as default};
